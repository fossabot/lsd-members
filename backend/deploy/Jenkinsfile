#!/usr/bin/env groovy

def deployEnv() {
    if (env.JOB_NAME == 'lsd-members-backend-deploy-dev') {
        'dev'
    } else if (env.JOB_NAME == 'lsd-members-backend-deploy') {
        'prod'
    } else {
        throw new RuntimeException("Invalid job name - could not detect environment")
    }
}

def server(env) { (env == 'prod') ? 'deploy@api.leedsskydivers.com' : 'deploy@api.dev.leedsskydivers.com' }

node {

    stage('Copy release jar') {
        step([$class     : 'CopyArtifact',
              projectName: 'lsd-members-backend',
              filter     : 'target/scala-2.11/luskydive-assembly-*'])

        sh 'mv target/scala-2.11/*.jar deploy.jar'
        sh 'rm -rf target'
    }

    stage('Deploy') {
        withCredentials([
                file(credentialsId: 'lsd-' + deployEnv() + '-deploy', variable: 'DEPLOY_KEY')
        ]) {
            sh 'chmod 0600 $DEPLOY_KEY'
            sh 'scp -i $DEPLOY_KEY deploy.jar ' + server(deployEnv()) + ':/home/api/jars/$BUILD_TAG.jar'
            sh 'ssh -i $DEPLOY_KEY ' + server(deployEnv()) + ' /opt/deploy.sh /home/api/jars/$BUILD_TAG.jar'
        }
    }

    stage('Archive') {
        archiveArtifacts 'deploy.jar'
    }

}
